name: CI
on:
  push:
  pull_request:

jobs:
  unit-testing:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macOS-latest]
    if: "!contains(github.event.head_commit.message, '[ci skip]')"
    steps:
    - name: Install coreutils
      if: matrix.platform == 'macOS-latest'
      run: brew install coreutils

    - name: Checkout repository and submodules
      uses: actions/checkout@v1
      with:
        submodules: true

    - name: Install go compiler for libwg-go
      uses: actions/setup-go@v1
      with:
        go-version: '1.13.4'

    - name: Generate cache key
      run: ./checksum.sh checksum.txt

    - uses: actions/cache@v1
      with:
        path: ~/.gradle/caches/jars-3
        key: ${{ runner.os }}-gradlejars-${{ hashFiles('checksum.txt') }}
        restore-keys: |
          ${{ runner.os }}-gradlejars-

    - uses: actions/cache@v1
      with:
        path: ~/.gradle/caches/build-cache-1
        key: ${{ runner.os }}-gradlebuildcache-${{ hashFiles('checksum.txt') }}
        restore-keys: |
          ${{ runner.os }}-gradlebuildcache-

    - name: Copy CI gradle.properties
      run: mkdir -p ~/.gradle ; cp .github/ci-gradle.properties ~/.gradle/gradle.properties

    - name: Download gradle dependencies
      run: ./gradlew dependencies

    - name: Validate codestyle with Spotless
      run: ./gradlew spotlessCheck

    - name: Run static analysis
      run: ./gradlew detekt

    - name: Build app
      run: ./gradlew :app:assembleDebug

    - name: Run unit tests
      run: ./gradlew testDebug
