apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'

// Create a variable called keystorePropertiesFile, and initialize it to your
// keystore.properties file, in the rootProject folder.
final def keystorePropertiesFile = rootProject.file("keystore.properties")

final def gitHash = { ->
    if (System.getenv("WITH_MAINFRAMER") == "true" ||
            System.getenv("TRAVIS") == "true") {
        "TEST"
    } else {
        final def stdout = new ByteArrayOutputStream()
        exec {
            commandLine 'git', 'describe', '--tags'
            standardOutput = stdout
        }
        stdout.toString().trim()
    }
}

android {
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    compileSdkVersion 28
    dataBinding.enabled true
    android.applicationVariants.all { final variant ->
        variant.outputs.all {
            outputFileName = "wg-android_${gitHash()}.apk"
        }
    }
    defaultConfig {
        applicationId 'me.msfjarvis.wgandroid'
        minSdkVersion 21
        targetSdkVersion 28
        versionCode 439
        versionName '0.0.20180826'
        buildConfigField 'int', 'MIN_SDK_VERSION', "$minSdkVersion.apiLevel"
    }
    // If the keystore file exists
    if (keystorePropertiesFile.exists()) {
        // Initialize a new Properties() object called keystoreProperties.
        final def keystoreProperties = new Properties()

        // Load your keystore.properties file into the keystoreProperties object.
        keystoreProperties.load(new FileInputStream(keystorePropertiesFile))

        signingConfigs {
            release {
                keyAlias keystoreProperties['keyAlias']
                keyPassword keystoreProperties['keyPassword']
                storeFile file(keystoreProperties['storeFile'])
                storePassword keystoreProperties['storePassword']
            }
        }
    }
    buildTypes {
        release {
            if (keystorePropertiesFile.exists()) signingConfig signingConfigs.release
            externalNativeBuild {
                cmake {
                    arguments "-DANDROID_PACKAGE_NAME=${android.defaultConfig.applicationId}"
                }
            }
        }
        debug {
            applicationIdSuffix ".ktdebug"
            versionNameSuffix "-debug"
            externalNativeBuild {
                cmake {
                    arguments "-DANDROID_PACKAGE_NAME=${android.defaultConfig.applicationId}${applicationIdSuffix}"
                }
            }
        }
    }
    externalNativeBuild {
        cmake {
            path 'tools/CMakeLists.txt'
        }
    }
    lintOptions {
          abortOnError false
      }
}

ext {
    androidXVersion = '1.0.0-rc02'
    coroutinesVersion = '0.25.0'
    databindingVersion = '3.3.0-alpha05'
    materialComponentsVersion = '1.0.0-rc01'
    rxShellVersion = '1.0.8'
    streamsupportVersion = '1.6.0'
    timberVersion = '4.7.1'
    zxingEmbeddedVersion = '3.6.0'
}

dependencies {
    implementation "androidx.databinding:databinding-adapters:$databindingVersion"
    implementation "androidx.databinding:databinding-runtime:$databindingVersion"
    implementation "androidx.appcompat:appcompat:$androidXVersion"
    implementation "androidx.cardview:cardview:$androidXVersion"
    implementation "androidx.legacy:legacy-preference-v14:$androidXVersion"
    implementation "androidx.annotation:annotation:$androidXVersion"
    implementation "com.google.android.material:material:$materialComponentsVersion"
    implementation "com.jakewharton.timber:timber:$timberVersion"
    implementation "com.journeyapps:zxing-android-embedded:$zxingEmbeddedVersion"
    implementation "eu.darken.rxshell:core:$rxShellVersion"
    implementation "eu.darken.rxshell:root:$rxShellVersion" // For root related extensions
    implementation "net.sourceforge.streamsupport:android-retrofuture:$streamsupportVersion"
    implementation "net.sourceforge.streamsupport:android-retrostreams:$streamsupportVersion"
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$coroutinesVersion"
}

tasks.withType(JavaCompile) {
    options.compilerArgs << '-Xlint:unchecked'
    options.deprecation = true
}
repositories {
    mavenCentral()
}
